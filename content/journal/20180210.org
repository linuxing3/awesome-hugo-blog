#+TITLE: Journal Entry - Saturday, 02/10/2018
#+AUTHOR: xing wenju
#+IRC: linuxing3 on freenode
#+EMAIL: xingwenju@gmail.com
#+STARTUP: overview

* Debugging Elisp

#+BEGIN_SRC elisp
(defun helloworld (name)
  (let ((n (subroutine name)))
    (message (format "Hello world, %s!" name))))

(defun subroutine (s)
  (concat "my dear " s))

(helloworld "Spacemacs")
#+END_SRC

** org-edit-special

1) To start the tutorial put your point in the source block above and press ~, '~
which will call =org-edit-special= command and as a result it will open a new
buffer in =emacs-lisp-mode=.

** eval-defun

2) Evaluate each sexp by putting your point in each of them and press ~, e f~.
to call =eval-defun=

** debug-defun

3) To debug the =helloworld= function, please use =debug-defun=
put your cursor on the =defun= keyword and press ~SPC m d f~ (or ~, d f~), it will put
a breakpoint on the function (we say that we instrumentalise this function) so
whenever the Lisp interpreter encounters this function it will start the
debugger.

** eval-last-sexp

4) Then go to the closing parenthesis of =(helloworld "Spacemacs")= and press
~, e e~ to evaluate it, which means =eval-last-sexp= if you are using =vim= editing
style you end up in evilified state otherwise you end up in emacs state and
=*Debugging*= is displayed in the mode line.

** Debugging

5) Press ~s~ to go to next step up to the opening parenthesis of =(subroutine
   name)=,

6) Press ~i~ to go into the =subroutine= where you can press ~s~ to step in
function or press ~o~ to go out of it.

7) Press ~a~ to stop debugging.
